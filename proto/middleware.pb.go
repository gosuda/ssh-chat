// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.30.2
// source: middleware.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ChatMessage represents a message from an SSH client
type ChatMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"` // Unique message ID for tracking
	Nick          string                 `protobuf:"bytes,2,opt,name=nick,proto3" json:"nick,omitempty"`                            // Nickname of the sender
	Text          string                 `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`                            // Message text
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                 // Unix timestamp in seconds
	Ip            string                 `protobuf:"bytes,5,opt,name=ip,proto3" json:"ip,omitempty"`                                // IP address of the sender
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	mi := &file_middleware_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_middleware_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_middleware_proto_rawDescGZIP(), []int{0}
}

func (x *ChatMessage) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *ChatMessage) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *ChatMessage) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ChatMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ChatMessage) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

// AIResponse represents AI's response chunk(s)
type AIResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`              // References the ChatMessage ID being responded to
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`                                         // Text chunk (can be partial for streaming)
	IsFinal       bool                   `protobuf:"varint,3,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"`                   // True if this is the last chunk for this message_id
	AuthSignature []byte                 `protobuf:"bytes,4,opt,name=auth_signature,json=authSignature,proto3" json:"auth_signature,omitempty"`  // ECDSA signature for client authentication (sent only in first message)
	AuthTimestamp int64                  `protobuf:"varint,5,opt,name=auth_timestamp,json=authTimestamp,proto3" json:"auth_timestamp,omitempty"` // Unix timestamp in milliseconds (signed with signature)
	Nick          string                 `protobuf:"bytes,6,opt,name=nick,proto3" json:"nick,omitempty"`                                         // Nickname for the AI sender
	Ip            string                 `protobuf:"bytes,7,opt,name=ip,proto3" json:"ip,omitempty"`                                             // IPv4 address of the client (signed with signature)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AIResponse) Reset() {
	*x = AIResponse{}
	mi := &file_middleware_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AIResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AIResponse) ProtoMessage() {}

func (x *AIResponse) ProtoReflect() protoreflect.Message {
	mi := &file_middleware_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AIResponse.ProtoReflect.Descriptor instead.
func (*AIResponse) Descriptor() ([]byte, []int) {
	return file_middleware_proto_rawDescGZIP(), []int{1}
}

func (x *AIResponse) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *AIResponse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *AIResponse) GetIsFinal() bool {
	if x != nil {
		return x.IsFinal
	}
	return false
}

func (x *AIResponse) GetAuthSignature() []byte {
	if x != nil {
		return x.AuthSignature
	}
	return nil
}

func (x *AIResponse) GetAuthTimestamp() int64 {
	if x != nil {
		return x.AuthTimestamp
	}
	return 0
}

func (x *AIResponse) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *AIResponse) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

var File_middleware_proto protoreflect.FileDescriptor

const file_middleware_proto_rawDesc = "" +
	"\n" +
	"\x10middleware.proto\x12\asshchat\"\x82\x01\n" +
	"\vChatMessage\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12\x12\n" +
	"\x04nick\x18\x02 \x01(\tR\x04nick\x12\x12\n" +
	"\x04text\x18\x03 \x01(\tR\x04text\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\x12\x0e\n" +
	"\x02ip\x18\x05 \x01(\tR\x02ip\"\xcc\x01\n" +
	"\n" +
	"AIResponse\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\x12\x19\n" +
	"\bis_final\x18\x03 \x01(\bR\aisFinal\x12%\n" +
	"\x0eauth_signature\x18\x04 \x01(\fR\rauthSignature\x12%\n" +
	"\x0eauth_timestamp\x18\x05 \x01(\x03R\rauthTimestamp\x12\x12\n" +
	"\x04nick\x18\x06 \x01(\tR\x04nick\x12\x0e\n" +
	"\x02ip\x18\a \x01(\tR\x02ip2Q\n" +
	"\x10StreamMiddleware\x12=\n" +
	"\n" +
	"StreamChat\x12\x13.sshchat.AIResponse\x1a\x14.sshchat.ChatMessage\"\x00(\x010\x01B)Z'github.com/iwanhae/ssh-chat/proto;protob\x06proto3"

var (
	file_middleware_proto_rawDescOnce sync.Once
	file_middleware_proto_rawDescData []byte
)

func file_middleware_proto_rawDescGZIP() []byte {
	file_middleware_proto_rawDescOnce.Do(func() {
		file_middleware_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_middleware_proto_rawDesc), len(file_middleware_proto_rawDesc)))
	})
	return file_middleware_proto_rawDescData
}

var file_middleware_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_middleware_proto_goTypes = []any{
	(*ChatMessage)(nil), // 0: sshchat.ChatMessage
	(*AIResponse)(nil),  // 1: sshchat.AIResponse
}
var file_middleware_proto_depIdxs = []int32{
	1, // 0: sshchat.StreamMiddleware.StreamChat:input_type -> sshchat.AIResponse
	0, // 1: sshchat.StreamMiddleware.StreamChat:output_type -> sshchat.ChatMessage
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_middleware_proto_init() }
func file_middleware_proto_init() {
	if File_middleware_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_middleware_proto_rawDesc), len(file_middleware_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_middleware_proto_goTypes,
		DependencyIndexes: file_middleware_proto_depIdxs,
		MessageInfos:      file_middleware_proto_msgTypes,
	}.Build()
	File_middleware_proto = out.File
	file_middleware_proto_goTypes = nil
	file_middleware_proto_depIdxs = nil
}
